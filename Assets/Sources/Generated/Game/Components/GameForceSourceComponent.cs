//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ForceSourceComponent forceSource { get { return (ForceSourceComponent)GetComponent(GameComponentsLookup.ForceSource); } }
    public bool hasForceSource { get { return HasComponent(GameComponentsLookup.ForceSource); } }

    public void AddForceSource(UnityEngine.Vector2 newForceVector) {
        var index = GameComponentsLookup.ForceSource;
        var component = CreateComponent<ForceSourceComponent>(index);
        component.ForceVector = newForceVector;
        AddComponent(index, component);
    }

    public void ReplaceForceSource(UnityEngine.Vector2 newForceVector) {
        var index = GameComponentsLookup.ForceSource;
        var component = CreateComponent<ForceSourceComponent>(index);
        component.ForceVector = newForceVector;
        ReplaceComponent(index, component);
    }

    public void RemoveForceSource() {
        RemoveComponent(GameComponentsLookup.ForceSource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherForceSource;

    public static Entitas.IMatcher<GameEntity> ForceSource {
        get {
            if (_matcherForceSource == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ForceSource);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherForceSource = matcher;
            }

            return _matcherForceSource;
        }
    }
}
